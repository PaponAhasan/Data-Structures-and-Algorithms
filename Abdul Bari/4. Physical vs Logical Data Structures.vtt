WEBVTT

00:00.400 --> 00:06.030
In the previous year to follow me we have studied how a program utilizes the mean memory by rewriting

00:06.030 --> 00:13.200
the memory in all sections like a strike on the heap and we have also understood what is static memory

00:13.200 --> 00:16.470
allocation and what is dynamic memory allocation.

00:16.470 --> 00:22.290
Now let us move to the topic that is introduction of the data structures in this video.

00:22.360 --> 00:26.220
I will be giving introduction to various data structures.

00:26.220 --> 00:31.650
I have categorized them here as physical data structures and logical structures.

00:31.680 --> 00:34.370
So first I'll explain what physical data structures.

00:34.410 --> 00:40.230
Just the introduction then introduction to various Logical Data Structures.

00:40.230 --> 00:43.770
Now let us look at physical structures.

00:43.920 --> 00:49.040
These are the two physical structures Eddie and linguist.

00:49.410 --> 00:54.120
We can have more physical structure by taking the combination of these.

00:54.460 --> 00:57.060
And linking link it can have some variations in them.

00:57.960 --> 00:59.730
Basically these are two.

00:59.930 --> 01:03.270
The first thing why I'm calling the mass physical.

01:03.420 --> 01:10.370
The reason is these data structure besides or defines how the memories organize hold the memories.

01:10.380 --> 01:11.130
I look at it.

01:12.090 --> 01:13.860
So let us look at them one by one.

01:15.000 --> 01:16.100
This is an Audi.

01:16.140 --> 01:21.420
This is directly supported by programming languages like it is there and see language in C++ and even

01:21.420 --> 01:22.290
in Java.

01:22.290 --> 01:23.590
This is directly supported.

01:24.480 --> 01:29.130
This is a collection of contiguous memory locations all these locations are side by side.

01:29.610 --> 01:35.610
If I have an idea for seven integers then all these places for seven integers are together.

01:35.840 --> 01:38.200
They are at one place.

01:38.550 --> 01:47.640
This study will have fixed sites once it is created of some size then that size cannot be increase or

01:47.640 --> 01:48.290
decrease.

01:49.530 --> 01:54.940
So it is a fixed size so the size of an array is static.

01:55.290 --> 02:03.780
There this array can be created and it can be created either inside stock or it can be created inside

02:03.820 --> 02:07.230
a heap.

02:07.230 --> 02:15.150
We can have a pointer pointing to the study so it can be created either inside stock or inside a heap

02:15.410 --> 02:19.030
anyway it can be created when to use the syntax structure.

02:19.080 --> 02:24.900
When you are sure what is the maximum number of elements that you are going to store if you know the

02:24.900 --> 02:32.350
limit of the list then you can go for a second structure linked list.

02:32.370 --> 02:38.840
This is a complete dynamic data structure and it is a collection of n with each node contains the data

02:38.970 --> 02:42.300
and the link to next node.

02:42.450 --> 02:50.100
The limit of this list can grow and reduce dynamically it having variable length.

02:50.850 --> 02:52.790
So I support your requirement.

02:52.800 --> 02:57.180
You can go on adding more and more norms and add more elements.

02:57.390 --> 02:59.570
You can do is the size.

02:59.770 --> 03:03.410
This link was always created in a heap.

03:05.530 --> 03:12.580
Collection of moves are created always in a heap like how to be a pointer that is pointing there.

03:12.880 --> 03:15.430
So the head pointer may be inside this track.

03:17.530 --> 03:20.830
So link is always created in heap.

03:20.830 --> 03:25.610
We go with this one if you know the limit of list of the size of the list.

03:25.630 --> 03:28.220
If it is fixed and we go with this.

03:28.230 --> 03:31.070
If the size of the list is not known.

03:31.120 --> 03:38.950
So these two are physical because they define how the memory should be organized for storing the elements

03:38.980 --> 03:40.620
or for storing the data.

03:40.630 --> 03:43.160
So these are more related to memory.

03:43.240 --> 03:49.230
So just introduce these two decades structures to you as this is a separate topic in our subject.

03:49.720 --> 03:55.450
Now let us move on to the next type of diagnostic shows that is logical structures.

03:55.550 --> 04:03.220
Now let us look at logical structures see here are the list of logical data structures that are stocked

04:03.250 --> 04:07.370
QS trees graphs and hash table and these are physical structure.

04:07.380 --> 04:12.200
Already we have seen no let us look at the differences between them.

04:12.310 --> 04:17.830
Physical data structures are actually meant for storing the data they will hold the data they will actually

04:17.830 --> 04:19.870
store the data in the memory.

04:19.870 --> 04:25.090
Then when you have the list of values you may be performing operations like inserting more values or

04:25.090 --> 04:30.820
deleting existing values or searching for the values and many more operations.

04:30.910 --> 04:38.210
Now the question is how you want to utilize those values how you will be performing insertion and deletion.

04:38.230 --> 04:45.470
What is the discipline that you are going to follow that a discipline is defined by these data structures.

04:45.730 --> 04:51.770
That is stock use trees and graphs and hash table.

04:52.090 --> 05:03.880
These are linear structures and these are non-linear and this may be near or tabular data structure

05:04.590 --> 05:08.640
hash table stable so it is a tabular data structure stack.

05:08.650 --> 05:11.480
This works on discipline that is lethal.

05:11.500 --> 05:12.660
Last in first chunk

05:15.580 --> 05:18.720
Q looks on the discipline that is feasible.

05:18.760 --> 05:21.550
This is a non-linear structure.

05:21.550 --> 05:26.590
This will be organized like a hierarchy and this is a collection of nodes and the links between the

05:26.590 --> 05:27.070
norms.

05:27.460 --> 05:31.300
So these are data structures are actually used in applications.

05:31.300 --> 05:38.040
These are data structures are actually used in algorithms and for implementing these data structures.

05:38.200 --> 05:45.160
We either use une or linguist so this is the important point that we have to learn in this topic that

05:45.160 --> 05:52.750
is these logical data structures are implemented using any of these physical data structure either are

05:52.810 --> 05:56.810
they are limitless or the combination of money and interest.

05:57.580 --> 06:02.430
So that's all I have given the introduction of various types of data structures.

06:02.440 --> 06:03.430
I have categorized them.

06:03.430 --> 06:08.470
This was just the introduction to give you a witness for the conclusion of this topic as I wanted it

06:08.470 --> 06:14.140
to differentiate the type of data structure that is physical data structures and linked lists and these

06:14.140 --> 06:20.170
are logical and these logical data structures are implemented using physical data structures either

06:20.170 --> 06:27.880
using other linguists so told our course we will learn about each data structures and we will implement

06:27.880 --> 06:31.870
them using Ardi as well as will implement them using linguists.

06:31.870 --> 06:37.450
So we have to learn this here I have given just names of the data structures some of the data structure.

06:37.450 --> 06:42.370
If you pick up each topic that a lot of sub topics and them like there are different type of cues there

06:42.370 --> 06:45.880
are different types of trees and there are different type of graphs.

06:45.880 --> 06:48.640
So each and everything we learn all those things in detail.

06:49.520 --> 06:56.920
So of course we will be first learning in detail about this ideas and linguistic structures we will

06:56.920 --> 07:03.360
implement then we will write the programs for these then we'll start learning about these dark architecture.

07:03.500 --> 07:11.170
Every data structure we would implement using update as well as linked list so in the next video I'll

07:11.170 --> 07:15.820
explain what is ADHD and what are the various type of lists.
